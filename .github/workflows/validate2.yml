name: Validate2

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review, edited]
    branches:
      - devel
      - release/**
      - feature/**
jobs:
  check_url:
    env:
      WRIKE_REGEX: "\\(https:\\|\\)//\\(www\\.\\|\\)wrike\\.com/open.htm?id=[0-9]+"
      AZURE_REGEX: "AB#[0-9]+"
      AZURE_PAT: ${{ secrets.AZURE_PAT }}
      AZURE_ORG_URL: "https://dev.azure.com/rapyuta-robotics"  
      AZURE_PROJECT: "Oks" 
      PR_BODY: "${{ github.event.pull_request.body }}"
    runs-on: ubuntu-latest
    steps:
      - name: Check for Wrike or Azure link in PR body
        run: |
          if ! echo "$PR_BODY" | grep -e "$WRIKE_REGEX" -e "$AZURE_REGEX" ; then
            echo "::error::Neither a Wrike link nor an Azure code found in the PR body. Please add a Wrike link or an Azure code (AB#<task_number>)."
            exit 1
          fi
          
          AZURE_ID=$(echo "$PR_BODY" | grep -oE 'AB#[0-9]+' | cut -d'#' -f2)

          API_URL="$AZURE_ORG_URL/$AZURE_PROJECT/_apis/wit/workitems/$AZURE_ID?api-version=7.1"
          RESPONSE=$(curl -s -u ":$AZURE_PAT" "$API_URL")

          if echo "$RESPONSE" | jq -e .error > /dev/null; then
            echo "::error::Failed to fetch work item from Azure DevOps:"
            echo "$RESPONSE" | jq -r .error.message
            exit 1
          fi

          WorkItemType=$(echo "$RESPONSE" | jq -r '.fields["System.WorkItemType"]')
          
          if [ "$WorkItemType" = "Issue" ]; then
            echo "::error::Azure Work Item type 'Issue' is not allowed."
            exit 1
          fi

          echo "::notice::Valid Wrike or Azure link found in PR body."




